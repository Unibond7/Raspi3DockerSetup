version: "3"
services:

  homeassistant:
    image: homeassistant/raspberrypi3-homeassistant:stable
    container_name: homeassistant
    depends_on:
      - deconz
      - influxdb
      - grafana
      - telegraf
    healthcheck:
      test: ["CMD", "curl", "-s", "http://localhost:8123"]
      interval: 5s
      timeout: 3s
      retries: 100
    restart: unless-stopped
    privileged: true
    network_mode: host
    environment:
      - TZ=Europe/Amsterdam
    devices:
      - /dev/ttyAMA0
      - /dev/vcio
    volumes:
      - /mnt/usb-disk/homeassistant/data/config:/config
      - /root/.ssh/asus_router:/config/asus_router

  deconz:
    image: marthoc/deconz:armhf-2.05.69
    container_name: deconz
    restart: unless-stopped
    network_mode: host
    environment:
      - DECONZ_WEB_PORT=8080
      - DECONZ_WS_PORT=8443
      - TZ=Europe/Amsterdam
      - DECONZ_UPNP=0
      - DECONZ_DEVICE=/dev/ttyACM0 
    devices:
     - /dev/ttyACM0
    volumes:
      - /mnt/usb-disk/deconz/data/config:/root/.local/share/dresden-elektronik/deCONZ
      - /etc/localtime:/etc/localtime:ro

  influxdb:
    image: influxdb:1.7.8
    container_name: influxdb 
    restart: unless-stopped
    environment:
      - INFLUXDB_DB=home_assistant
      - INFLUXDB_USER=${INFLUXDB_USER}
      - INFLUXDB_USER_PASSWORD=${INFLUXDB_USER_PASSWORD}
    volumes:
      - /mnt/usb-disk/influxdb:/var/lib/influxdb
    ports:
      - 8086:8086

  grafana:
    image: grafana/grafana:6.3.5
    container_name: grafana
    depends_on:
      - telegraf
      - influxdb
    restart: unless-stopped
    user: "0"
    volumes:
      - /mnt/usb-disk/grafana:/var/lib/grafana
    ports:
      - 3000:3000

  telegraf:
    image: telegraf:1.12.1
    container_name: telegraf
    depends_on:
      - influxdb
    restart: unless-stopped
    network_mode: container:influxdb
    environment:
      - HOST_PROC=/host/proc
      - TELEGRAF_DB_PASSWORD=${TELEGRAF_DB_PASSWORD}
    volumes:
      - /proc:/host/proc:ro
      - /mnt/usb-disk:/hostfs:ro
      - /var/run/docker.sock:/var/run/docker.sock:ro
      - ./services/telegraf/telegraf.conf:/etc/telegraf/telegraf.conf:ro

  noip:
    build:
      context: ./services/noip
    container_name: noip
    restart: unless-stopped
    environment:
      - NOIP_USERNAME=${NOIP_EMAIL}
      - NOIP_PASSWORD=${NOIP_PASSWORD}
      - NOIP_HOSTNAME=${HOSTNAME}
      - PERIOD=60